<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        McHY/2dt5hSdNX9VAAAAAElFTkSuQmCC
</value>
  </data>
</root>